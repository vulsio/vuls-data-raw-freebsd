{
  "vid": "91be81e7-3fea-11e1-afc7-2c4138874f7d",
  "topic": "Multiple implementations -- DoS via hash algorithm collision",
  "affects": [
    {
      "name": [
        "jruby"
      ],
      "range": [
        {
          "lt": "1.6.5.1"
        }
      ]
    },
    {
      "name": [
        "ruby",
        "ruby+nopthreads",
        "ruby+nopthreads+oniguruma",
        "ruby+oniguruma"
      ],
      "range": [
        {
          "lt": "1.8.7.357,1"
        }
      ]
    },
    {
      "name": [
        "rubygem-rack"
      ],
      "range": [
        {
          "lt": "1.3.6,3"
        }
      ]
    },
    {
      "name": [
        "v8"
      ],
      "range": [
        {
          "lt": "3.8.5"
        }
      ]
    },
    {
      "name": [
        "redis"
      ],
      "range": [
        {
          "le": "2.4.6"
        }
      ]
    },
    {
      "name": [
        "node"
      ],
      "range": [
        {
          "lt": "0.6.7"
        }
      ]
    }
  ],
  "description": {
    "xmlns": "http://www.w3.org/1999/xhtml",
    "text": "\n\t<p>oCERT reports:</p>\n\t<blockquote cite=\"http://www.ocert.org/advisories/ocert-2011-003.html\">\n\t  <p>A variety of programming languages suffer from a denial-of-service\n\t    (DoS) condition against storage functions of key/value pairs in\n\t    hash data structures, the condition can be leveraged by exploiting\n\t    predictable collisions in the underlying hashing algorithms.</p>\n\t  <p>The issue finds particular exposure in web server applications\n\t    and/or frameworks. In particular, the lack of sufficient limits\n\t    for the number of parameters in POST requests in conjunction with\n\t    the predictable collision properties in the hashing functions of\n\t    the underlying languages can render web applications vulnerable\n\t    to the DoS condition. The attacker, using specially crafted HTTP\n\t    requests, can lead to a 100% of CPU usage which can last up to\n\t    several hours depending on the targeted application and server\n\t    performance, the amplification effect is considerable and\n\t    requires little bandwidth and time on the attacker side.</p>\n\t  <p>The condition for predictable collisions in the hashing functions\n\t    has been reported for the following language implementations:\n\t    Java, JRuby, PHP, Python, Rubinius, Ruby. In the case of the\n\t    Ruby language, the 1.9.x branch is not affected by the\n\t    predictable collision condition since this version includes a\n\t    randomization of the hashing function.</p>\n\t  <p>The vulnerability outlined in this advisory is practically\n\t    identical to the one reported in 2003 and described in the paper\n\t    Denial of Service via Algorithmic Complexity Attacks which\n\t    affected the Perl language.</p>\n\t</blockquote>\n      "
  },
  "references": {
    "url": [
      "http://www.ocert.org/advisories/ocert-2011-003.html",
      "http://www.nruns.com/_downloads/advisory28122011.pdf"
    ],
    "cvename": [
      "CVE-2011-4838",
      "CVE-2011-4815",
      "CVE-2011-5036",
      "CVE-2011-5037"
    ]
  },
  "dates": {
    "discovery": "2011-12-28",
    "entry": "2012-01-16",
    "modified": "2012-01-20"
  }
}
