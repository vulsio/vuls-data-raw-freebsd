{
	"vid": "6a308e8e-b1b4-11da-b2fb-000e0c2e438a",
	"topic": "openssh -- remote denial of service",
	"affects": [
		{
			"name": [
				"FreeBSD"
			],
			"range": [
				{
					"lt": "5.4_12",
					"ge": "5.4"
				},
				{
					"lt": "5.3_27",
					"ge": "5.3"
				}
			]
		}
	],
	"description": {
		"xmlns": "http://www.w3.org/1999/xhtml",
		"text": "\n\t<h1>Problem description:</h1>\n\t<p>Because OpenSSH and OpenPAM have conflicting designs (one is event-\n\t  driven while the other is callback-driven), it is necessary for\n\t  OpenSSH to fork a child process to handle calls to the PAM framework.\n\t  However, if the unprivileged child terminates while PAM authentication\n\t  is under way, the parent process incorrectly believes that the PAM\n\t  child also terminated.  The parent process then terminates, and the\n\t  PAM child is left behind.</p>\n\t<p>Due to the way OpenSSH performs internal accounting, these orphaned\n\t  PAM children are counted as pending connections by the master OpenSSH\n\t  server process.  Once a certain number of orphans has accumulated, the\n\t  master decides that it is overloaded and stops accepting client\n\t  connections.</p>\n\t<h1>Impact:</h1>\n\t<p>By repeatedly connecting to a vulnerable server, waiting for\n\t  a password prompt, and closing the connection, an attacker can\n\t  cause OpenSSH to stop accepting client connections until the\n\t  system restarts or an administrator manually kills the orphaned\n\t  PAM processes.</p>\n\t<h1>Workaround:</h1>\n\t<p>The following command will show a list of orphaned PAM\n\t  processes:</p>\n\t<pre># pgrep -lf 'sshd.*\\[pam\\]'</pre>\n\t<p>The following command will kill orphaned PAM processes:</p>\n\t<pre># pkill -f 'sshd.*\\[pam\\]'</pre>\n\t<p>To prevent OpenSSH from leaving orphaned PAM processes behind,\n\t  perform one of the following:</p>\n\t<ol>\n\t  <li>\n\t    <p>Disable PAM authentication in OpenSSH.  Users will still\n\t      be able to log in using their Unix password, OPIE or SSH\n\t      keys.</p>\n\t    <p>To do this, execute the following commands as root:</p>\n\t    <pre># echo 'UsePAM no' &gt;&gt;/etc/ssh/sshd_config</pre>\n\t    <pre># echo 'PasswordAuthentication yes' &gt;&gt;/etc/ssh/sshd_config</pre>\n\t    <pre># /etc/rc.d/sshd restart</pre>\n\t  </li>\n\t  <li>\n\t    <p>If disabling PAM is not an option - if, for instance, you use\n\t      RADIUS authentication, or store user passwords in an SQL database\n\t      - you may instead disable privilege separation.  However, this may\n\t      leave OpenSSH vulnerable to hitherto unknown bugs, and should be\n\t      considered a last resort.</p>\n\t    <p>To do this, execute the following commands as root:</p>\n\t    <pre># echo 'UsePrivilegeSeparation no' &gt;&gt;/etc/ssh/sshd_config</pre>\n\t    <pre># /etc/rc.d/sshd restart</pre>\n\t  </li>\n\t</ol>\n      "
	},
	"references": {
		"cvename": [
			"CVE-2006-0883"
		],
		"freebsd_sa": [
			"SA-06:09.openssh"
		]
	},
	"dates": {
		"discovery": "2006-03-01",
		"entry": "2006-03-12",
		"modified": "2016-08-09"
	}
}
