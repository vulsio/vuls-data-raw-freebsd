{
	"vid": "e1d3a580-cd8b-11ea-bad0-08002728f74c",
	"topic": "Wagtail -- XSS vulnerability",
	"affects": [
		{
			"name": [
				"py36-wagtail",
				"py37-wagtail",
				"py38-wagtail"
			],
			"range": [
				{
					"lt": "2.9.3",
					"ge": "2.8.0"
				},
				{
					"lt": "2.7.4"
				}
			]
		}
	],
	"description": {
		"xmlns": "http://www.w3.org/1999/xhtml",
		"text": "\n\t<p>GitHub Advisory Database:</p>\n\t<blockquote cite=\"https://github.com/advisories/GHSA-2473-9hgq-j7xw\">\n\t  <p>When a form page type is made available to Wagtail editors through the\n\t    wagtail.contrib.forms app, and the page template is built using\n\t    Django's standard form rendering helpers such as form.as_p (as directed\n\t    in the documentation), any HTML tags used within a form field's help\n\t    text will be rendered unescaped in the page. Allowing HTML within help\n\t    text is an intentional design decision by Django; however, as a matter\n\t    of policy Wagtail does not allow editors to insert arbitrary HTML by\n\t    default, as this could potentially be used to carry out cross-site\n\t    scripting attacks, including privilege escalation. This functionality\n\t    should therefore not have been made available to editor-level users.</p>\n\t  <p>The vulnerability is not exploitable by an ordinary site visitor\n\t    without access to the Wagtail admin.</p>\n\t</blockquote>\n      "
	},
	"references": {
		"url": [
			"https://github.com/advisories/GHSA-2473-9hgq-j7xw"
		],
		"cvename": [
			"CVE-2020-15118"
		]
	},
	"dates": {
		"discovery": "2020-07-20",
		"entry": "2020-07-24"
	}
}
