{
  "vid": "80a897a2-c1a6-11e6-ae1b-002590263bf5",
  "topic": "xen-kernel -- x86 CMPXCHG8B emulation fails to ignore operand size override",
  "affects": [
    {
      "name": [
        "xen-kernel"
      ],
      "range": [
        {
          "lt": "4.7.1_1"
        }
      ]
    }
  ],
  "description": {
    "xmlns": "http://www.w3.org/1999/xhtml",
    "text": "\n\t<p>The Xen Project reports:</p>\n\t<blockquote cite=\"http://xenbits.xen.org/xsa/advisory-200.html\">\n\t  <p>The x86 instruction CMPXCHG8B is supposed to ignore legacy operand\n\t    size overrides; it only honors the REX.W override (making it\n\t    CMPXCHG16B). So, the operand size is always 8 or 16. When support\n\t    for CMPXCHG16B emulation was added to the instruction emulator,\n\t    this restriction on the set of possible operand sizes was relied on\n\t    in some parts of the emulation; but a wrong, fully general, operand\n\t    size value was used for other parts of the emulation. As a result,\n\t    if a guest uses a supposedly-ignored operand size prefix, a small\n\t    amount of hypervisor stack data is leaked to the guests: a 96 bit\n\t    leak to guests running in 64-bit mode; or, a 32 bit leak to other\n\t    guests.</p>\n\t  <p>A malicious unprivileged guest may be able to obtain sensitive\n\t    information from the host.</p>\n\t</blockquote>\n      "
  },
  "references": {
    "url": [
      "http://xenbits.xen.org/xsa/advisory-200.html"
    ],
    "cvename": [
      "CVE-2016-9932"
    ]
  },
  "dates": {
    "discovery": "2016-12-13",
    "entry": "2016-12-14"
  }
}
