{
  "vid": "2fe40238-480f-11e5-adde-14dae9d210b8",
  "topic": "tarsnap -- buffer overflow and local DoS",
  "affects": [
    {
      "name": [
        "tarsnap"
      ],
      "range": [
        {
          "lt": "1.0.36"
        }
      ]
    }
  ],
  "description": {
    "xmlns": "http://www.w3.org/1999/xhtml",
    "text": "\n\t<p>Colin Percival reports:</p>\n\t<blockquote cite=\"http://mail.tarsnap.com/tarsnap-announce/msg00032.html\">\n\t  <p>1. SECURITY FIX: When constructing paths of objects being archived, a buffer\n\t    could overflow by one byte upon encountering 1024, 2048, 4096, etc. byte\n\t    paths. Theoretically this could be exploited by an unprivileged user whose\n\t    files are being archived; I do not believe it is exploitable in practice,\n\t    but I am offering a $1000 bounty for the first person who can prove me wrong:\n\t    http://www.daemonology.net/blog/2015-08-21-tarsnap-1000-exploit-bounty.html</p>\n\t  <p>2. SECURITY FIX: An attacker with a machine's write keys, or with read keys\n\t    and control of the tarsnap service, could make tarsnap allocate a large\n\t    amount of memory upon listing archives or reading an archive the attacker\n\t    created; on 32-bit machines, tarsnap can be caused to crash under the\n\t    aforementioned conditions.</p>\n\t</blockquote>\n      "
  },
  "references": {
    "url": [
      "http://mail.tarsnap.com/tarsnap-announce/msg00032.html",
      "http://www.daemonology.net/blog/2015-08-21-tarsnap-1000-exploit-bounty.html"
    ]
  },
  "dates": {
    "discovery": "2015-08-21",
    "entry": "2015-08-21"
  }
}
