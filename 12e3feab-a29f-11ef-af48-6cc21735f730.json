{
	"vid": "12e3feab-a29f-11ef-af48-6cc21735f730",
	"topic": "PostgreSQL -- SET ROLE, SET SESSION AUTHORIZATION reset to wrong user ID",
	"affects": [
		{
			"name": [
				"postgresql17-server"
			],
			"range": [
				{
					"lt": "17.1"
				}
			]
		},
		{
			"name": [
				"postgresql16-server"
			],
			"range": [
				{
					"lt": "16.5"
				}
			]
		},
		{
			"name": [
				"postgresql15-server"
			],
			"range": [
				{
					"lt": "15.9"
				}
			]
		},
		{
			"name": [
				"postgresql14-server"
			],
			"range": [
				{
					"lt": "14.14"
				}
			]
		},
		{
			"name": [
				"postgresql13-server"
			],
			"range": [
				{
					"lt": "13.17"
				}
			]
		},
		{
			"name": [
				"postgresql12-server"
			],
			"range": [
				{
					"lt": "12.21"
				}
			]
		}
	],
	"description": {
		"xmlns": "http://www.w3.org/1999/xhtml",
		"text": "\n\t<p>PostgreSQL project reports:</p>\n\t<blockquote cite=\"https://www.postgresql.org/support/security/CVE-2024-10978/\">\n\t<p>\n\tIncorrect privilege assignment in PostgreSQL allows a\n\tless-privileged application user to view or change\n\tdifferent rows from those intended. An attack requires\n\tthe application to use SET ROLE, SET SESSION\n\tAUTHORIZATION, or an equivalent feature. The problem\n\tarises when an application query uses parameters from\n\tthe attacker or conveys query results to the attacker.\n\tIf that query reacts to current_setting('role') or the\n\tcurrent user ID, it may modify or return data as though\n\tthe session had not used SET ROLE or SET SESSION\n\tAUTHORIZATION. The attacker does not control which\n\tincorrect user ID applies. Query text from\n\tless-privileged sources is not a concern here, because\n\tSET ROLE and SET SESSION AUTHORIZATION are not sandboxes\n\tfor unvetted queries\n\t</p>\n\t</blockquote>\n\t"
	},
	"references": {
		"url": [
			"https://www.postgresql.org/support/security/CVE-2024-10978/"
		],
		"cvename": [
			"CVE-2024-10978"
		]
	},
	"dates": {
		"discovery": "2024-11-14",
		"entry": "2024-11-14"
	}
}
