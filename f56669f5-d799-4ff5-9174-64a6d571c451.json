{
	"vid": "f56669f5-d799-4ff5-9174-64a6d571c451",
	"topic": "bro -- Null pointer dereference and Signed integer overflow",
	"affects": [
		{
			"name": [
				"bro"
			],
			"range": [
				{
					"lt": "2.6.3"
				}
			]
		}
	],
	"description": {
		"xmlns": "http://www.w3.org/1999/xhtml",
		"text": "\n\t<p>Jon Siwek of Corelight reports:</p>\n\t<blockquote cite=\"https://raw.githubusercontent.com/zeek/zeek/1d874e5548a58b3b8fd2a342fe4aa0944e779809/NEWS\">\n\t  <p>This is a security patch release to address potential\n\t  Denial of Service vulnerabilities:</p>\n\t  <ul>\n\t  <li>\n\t  Null pointer dereference in the RPC analysis code. RPC\n\t  analyzers (e.g. MOUNT or NFS) are not enabled in the\n\t  default configuration.</li>\n\n\t  <li>\n\t  Signed integer overflow in BinPAC-generated parser code.\n\t  The result of this is Undefined Behavior with respect to\n\t  the array bounds checking conditions that BinPAC generates,\n\t  so it's unpredictable what an optimizing compiler may\n\t  actually do under the assumption that signed integer\n\t  overlows should never happen.  The specific symptom which\n\t  lead to finding this issue was with the PE analyzer causing\n\t  out-of-memory crashes due to large allocations that were\n\t  otherwise prevented when the array bounds checking logic\n\t  was changed to prevent any possible signed integer overlow.</li>\n\t  </ul>\n\t</blockquote>\n      "
	},
	"references": {
		"url": [
			"https://raw.githubusercontent.com/zeek/zeek/1d874e5548a58b3b8fd2a342fe4aa0944e779809/NEWS"
		]
	},
	"dates": {
		"discovery": "2019-06-22",
		"entry": "2019-08-09"
	}
}
