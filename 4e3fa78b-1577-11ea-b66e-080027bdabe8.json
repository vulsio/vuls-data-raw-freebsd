{
	"vid": "4e3fa78b-1577-11ea-b66e-080027bdabe8",
	"topic": "Django -- multiple vulnerabilities",
	"affects": [
		{
			"name": [
				"py35-django21",
				"py36-django21",
				"py37-django21",
				"py38-django21"
			],
			"range": [
				{
					"lt": "2.1.15"
				}
			]
		},
		{
			"name": [
				"py35-django22",
				"py36-django22",
				"py37-django22",
				"py38-django22"
			],
			"range": [
				{
					"lt": "2.2.8"
				}
			]
		}
	],
	"description": {
		"xmlns": "http://www.w3.org/1999/xhtml",
		"text": "\n\t<p>Django release reports:</p>\n\t<blockquote cite=\"https://www.djangoproject.com/weblog/2019/dec/02/security-releases/\">\n\t  <p>CVE-2019-19118: Privilege escalation in the Django admin.</p>\n\t  <p>Since Django 2.1, a Django model admin displaying a parent model with related\n\t    model inlines, where the user has view-only permissions to a parent model but\n\t    edit permissions to the inline model, would display a read-only view of the parent\n\t    model but editable forms for the inline.</p>\n\t  <p>Submitting these forms would not allow direct edits to the parent model, but would\n\t    trigger the parent model's save() method, and cause pre and post-save signal handlers\n\t    to be invoked. This is a privilege escalation as a user who lacks permission to edit\n\t    a model should not be able to trigger its save-related signals.</p>\n\t</blockquote>\n      "
	},
	"references": {
		"url": [
			"https://www.djangoproject.com/weblog/2019/dec/02/security-releases/"
		],
		"cvename": [
			"CVE-2019-19118"
		]
	},
	"dates": {
		"discovery": "2019-11-25",
		"entry": "2019-12-03"
	}
}
