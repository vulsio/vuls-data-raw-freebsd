{
	"vid": "c8eb4c40-47bd-11ee-8e38-002590c1f29c",
	"topic": "FreeBSD -- Multiple vulnerabilities in OpenSSL",
	"affects": [
		{
			"name": [
				"FreeBSD"
			],
			"range": [
				{
					"lt": "13.1_7",
					"ge": "13.1"
				},
				{
					"lt": "12.4_2",
					"ge": "12.4"
				},
				{
					"lt": "12.3_12",
					"ge": "12.3"
				}
			]
		}
	],
	"description": {
		"xmlns": "http://www.w3.org/1999/xhtml",
		"text": "\n\t<h1>Problem Description:</h1>\n\t<h2>X.400 address type confusion in X.509 GeneralName (CVE-2023-0286)</h2>\n\t<p>There is a type confusion vulnerability relating to X.400 address processing\n\tinside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\n\tthe public structure definition for GENERAL_NAME incorrectly specified the type\n\tof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\n\tthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\n\tASN1_STRING.</p>\n\t<h2>Timing Oracle in RSA Decryption (CVE-2022-4304)</h2>\n\t<p>A timing based side channel exists in the OpenSSL RSA Decryption\n\timplementation.</p>\n\t<h2>Use-after-free following BIO_new_NDEF (CVE-2023-0215)</h2>\n\t<p>The public API function BIO_new_NDEF is a helper function used for streaming\n\tASN.1 data via a BIO. It is primarily used internally to OpenSSL to support\n\tthe SMIME, CMS and PKCS7 streaming capabilities, but may also be called\n\tdirectly by end user applications.</p>\n\t<p>The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\n\tBIO onto the front of it to form a BIO chain, and then returns the new head\n\tof the BIO chain to the caller. Under certain conditions, for example if a\n\tCMS recipient public key is invalid, the new filter BIO is freed and the\n\tfunction returns a NULL result indicating a failure. However, in this case,\n\tthe BIO chain is not properly cleaned up and the BIO passed by the caller\n\tstill retains internal pointers to the previously freed filter BIO.</p>\n\t<h2>Double free after calling PEM_read_bio_ex (CVE-2022-4450)</h2>\n\t<p>The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\n\tdecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload\n\tdata.  If the function succeeds then the \"name_out\", \"header\" and \"data\"\n\targuments are populated with pointers to buffers containing the relevant\n\tdecoded data. The caller is responsible for freeing those buffers. It is\n\tpossible to construct a PEM file that results in 0 bytes of payload data. In\n\tthis case PEM_read_bio_ex() will return a failure code but will populate the\n\theader argument with a pointer to a buffer that has already been freed.</p>\n\t<h1>Impact:</h1>\n\t<h2>X.400 address type confusion in X.509 GeneralName (CVE-2023-0286)</h2>\n\t<p>When CRL checking is enabled (i.e. the application sets the\n\tX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\n\tarbitrary pointers to a memcmp call, enabling them to read memory contents or\n\tenact a denial of service. In most cases, the attack requires the attacker to\n\tprovide both the certificate chain and CRL, neither of which need to have a\n\tvalid signature. If the attacker only controls one of these inputs, the other\n\tinput must already contain an X.400 address as a CRL distribution point, which\n\tis uncommon. As such, this vulnerability is most likely to only affect\n\tapplications which have implemented their own functionality for retrieving CRLs\n\tover a network.</p>\n\t<h2>Timing Oracle in RSA Decryption (CVE-2022-4304)</h2>\n\t<p>A timing based side channel exists in the OpenSSL RSA Decryption implementation\n\twhich could be sufficient to recover a plaintext across a network in a\n\tBleichenbacher style attack. To achieve a successful decryption an attacker\n\twould have to be able to send a very large number of trial messages for\n\tdecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\n\tRSA-OEAP and RSASVE.</p>\n\t<h2>Use-after-free following BIO_new_NDEF (CVE-2023-0215)</h2>\n\t<p>A use-after-free will occur under certain conditions. This will most likely\n\tresult in a crash.</p>\n\t<h2>Double free after calling PEM_read_bio_ex (CVE-2022-4450)</h2>\n\t<p>A double free may occur. This will most likely lead to a crash. This could be\n\texploited by an attacker who has the ability to supply malicious PEM files\n\tfor parsing to achieve a denial of service attack.</p>\n      "
	},
	"references": {
		"cvename": [
			"CVE-2023-0286",
			"CVE-2023-0215",
			"CVE-2022-4450",
			"CVE-2022-4304"
		],
		"freebsd_sa": [
			"SA-23:03.openssl"
		]
	},
	"dates": {
		"discovery": "2023-02-16",
		"entry": "2023-08-31"
	}
}
