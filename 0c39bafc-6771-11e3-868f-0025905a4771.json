{
  "vid": "0c39bafc-6771-11e3-868f-0025905a4771",
  "topic": "asterisk -- multiple vulnerabilities",
  "affects": [
    {
      "name": [
        "asterisk10"
      ],
      "range": [
        {
          "lt": "10.12.4"
        }
      ]
    },
    {
      "name": [
        "asterisk11"
      ],
      "range": [
        {
          "lt": "11.6.1"
        }
      ]
    },
    {
      "name": [
        "asterisk18"
      ],
      "range": [
        {
          "lt": "1.8.24.1"
        }
      ]
    }
  ],
  "description": {
    "xmlns": "http://www.w3.org/1999/xhtml",
    "text": "\n\t<p>The Asterisk project reports:</p>\n\t<blockquote cite=\"https://www.asterisk.org/security\">\n\t  <p>A 16 bit SMS message that contains an odd message length value will\n\t    cause the message decoding loop to run forever. The message buffer is\n\t    not on the stack but will be overflowed resulting in corrupted memory\n\t    and an immediate crash.</p>\n\t  <p>External control protocols, such as the Asterisk Manager Interface,\n\t    often have the ability to get and set channel variables; this allows\n\t    the execution of dialplan functions. Dialplan functions within\n\t    Asterisk are incredibly powerful, which is wonderful for building\n\t    applications using Asterisk. But during the read or write execution,\n\t    certain diaplan functions do much more. For example, reading the SHELL()\n\t    function can execute arbitrary commands on the system Asterisk is\n\t    running on.  Writing to the FILE() function can change any file that\n\t    Asterisk has write access to.  When these functions are executed from an\n\t    external protocol, that execution could result in a privilege escalation.</p>\n\t</blockquote>\n      "
  },
  "references": {
    "url": [
      "http://downloads.asterisk.org/pub/security/AST-2013-006.pdf",
      "http://downloads.asterisk.org/pub/security/AST-2013-007.pdf",
      "https://www.asterisk.org/security"
    ],
    "cvename": [
      "CVE-2013-7100"
    ]
  },
  "dates": {
    "discovery": "2013-12-16",
    "entry": "2013-12-17"
  }
}
