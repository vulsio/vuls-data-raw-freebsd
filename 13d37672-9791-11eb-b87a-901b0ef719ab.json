{
  "vid": "13d37672-9791-11eb-b87a-901b0ef719ab",
  "topic": "FreeBSD -- Memory disclosure by stale virtual memory mapping",
  "affects": [
    {
      "name": [
        "FreeBSD-kernel"
      ],
      "range": [
        {
          "lt": "12.2_6",
          "ge": "12.2"
        },
        {
          "lt": "11.4_9",
          "ge": "11.4"
        }
      ]
    }
  ],
  "description": {
    "xmlns": "http://www.w3.org/1999/xhtml",
    "text": "\n\t<h1>Problem Description:</h1>\n\t<p>A particular case of memory sharing is mishandled in the virtual memory\n\tsystem.  It is possible and legal to establish a relationship where\n\tmultiple descendant processes share a mapping which shadows memory of an\n\tancestor process.  In this scenario, when one process modifies memory\n\tthrough such a mapping, the copy-on-write logic fails to invalidate\n\tother mappings of the source page.  These stale mappings may remain even\n\tafter the mapped pages have been reused for another purpose.</p>\n\t<h1>Impact:</h1>\n\t<p>An unprivileged local user process can maintain a mapping of a page\n\tafter it is freed, allowing that process to read private data belonging\n\tto other processes or the kernel.</p>\n      "
  },
  "references": {
    "cvename": [
      "CVE-2021-29626"
    ],
    "freebsd_sa": [
      "SA-21:08.vm"
    ]
  },
  "dates": {
    "discovery": "2021-04-06",
    "entry": "2021-04-07"
  }
}
