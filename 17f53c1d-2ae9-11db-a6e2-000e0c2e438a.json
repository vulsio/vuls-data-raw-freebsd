{
  "vid": "17f53c1d-2ae9-11db-a6e2-000e0c2e438a",
  "topic": "postgresql -- encoding based SQL injection",
  "affects": [
    {
      "name": [
        "postgresql",
        "postgresql-server",
        "ja-postgresql"
      ],
      "range": [
        {
          "lt": "7.3.15",
          "ge": "7.3"
        },
        {
          "lt": "7.4.13",
          "ge": "7.4"
        },
        {
          "lt": "8.0.8",
          "ge": "8.0.0"
        },
        {
          "lt": "8.1.4",
          "ge": "8.1.0"
        }
      ]
    }
  ],
  "description": {
    "xmlns": "http://www.w3.org/1999/xhtml",
    "text": "\n\t<p>The PostgreSQL development team reports:</p>\n\t<blockquote cite=\"http://www.postgresql.org/docs/techdocs.50\">\n\t  <p>An attacker able to submit crafted strings to an\n\t    application that will embed those strings in SQL commands\n\t    can use invalidly-encoded multibyte characters to bypass\n\t    standard string-escaping methods, resulting in possible\n\t    injection of hostile SQL commands into the database.  The\n\t    attacks covered here work in any multibyte encoding.</p>\n\t  <p>The widely-used practice of escaping ASCII single quote\n\t    \"'\" by turning it into \"\\'\" is unsafe when operating in\n\t    multibyte encodings that allow 0x5c (ASCII code for\n\t    backslash) as the trailing byte of a multibyte character;\n\t    this includes at least SJIS, BIG5, GBK, GB18030, and UHC.\n\t    An application that uses this conversion while embedding\n\t    untrusted strings in SQL commands is vulnerable to\n\t    SQL-injection attacks if it communicates with the server in\n\t    one of these encodings.  While the standard client libraries\n\t    used with PostgreSQL have escaped \"'\" in the safe,\n\t    SQL-standard way of \"''\" for some time, the older practice\n\t    remains common.</p>\n\t</blockquote>\n      "
  },
  "references": {
    "url": [
      "http://www.postgresql.org/docs/techdocs.50"
    ],
    "cvename": [
      "CVE-2006-2313",
      "CVE-2006-2314"
    ],
    "bid": [
      "18092"
    ]
  },
  "dates": {
    "discovery": "2006-05-11",
    "entry": "2006-08-13"
  }
}
