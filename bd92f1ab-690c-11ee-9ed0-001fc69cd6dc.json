{
	"vid": "bd92f1ab-690c-11ee-9ed0-001fc69cd6dc",
	"topic": "11/libX11 multiple vulnerabilities",
	"affects": [
		{
			"name": [
				"libX11"
			],
			"range": [
				{
					"lt": "1.8.7"
				}
			]
		}
	],
	"description": {
		"xmlns": "http://www.w3.org/1999/xhtml",
		"text": "\n\t<p>The X.Org project reports:</p>\n\t<blockquote cite=\"https://lists.x.org/archives/xorg/2023-October/061506.html\">\n\t  <dl>\n\t    <dt>CVE-2023-43785: out-of-bounds memory access in _XkbReadKeySyms()</dt>\n\t    <dd>When libX11 is processing the reply from the X server to the XkbGetMap\n\t    request, if it detected the number of symbols in the new map was less\n\t    than the size of the buffer it had allocated, it always added room for\n\t    128 more symbols, instead of the actual size needed. While the\n\t    _XkbReadBufferCopyKeySyms() helper function returned an error if asked\n\t    to copy more keysyms into the buffer than there was space allocated for,\n\t    the caller never checked for an error and assumed the full set of keysyms\n\t    was copied into the buffer and could then try to read out of bounds when\n\t    accessing the buffer.  libX11 1.8.7 has been patched to both fix the size\n\t    allocated and check for error returns from _XkbReadBufferCopyKeySyms().</dd>\n\t    <dt>CVE-2023-43786: stack exhaustion in XPutImage</dt>\n\t    <dd>When splitting a single line of pixels into chunks that fit in a single\n\t    request (not using the BIG-REQUESTS extension) to send to the X server,\n\t    the code did not take into account the number of bits per pixel, so would\n\t    just loop forever finding it needed to send more pixels than fit in the\n\t    given request size and not breaking them down into a small enough chunk to\n\t    fit.  An XPM file was provided that triggered this bug when loaded via\n\t    libXpm's XpmReadFileToPixmap() function, which in turn calls XPutImage()\n\t    and hit this bug.</dd>\n\t    <dt>CVE-2023-43787: integer overflow in XCreateImage() leading to a heap overflow</dt>\n\t    <dd>When creating an image, there was no validation that the multiplication\n\t    of the caller-provided width by the visual's bits_per_pixel did not\n\t    overflow and thus result in the allocation of a buffer too small to hold\n\t    the data that would be copied into it.  An XPM file was provided that\n\t    triggered this bug when loaded via libXpm's XpmReadFileToPixmap() function,\n\t    which in turn calls XCreateImage() and hit this bug.i</dd>\n\t  </dl>\n\t</blockquote>\n      "
	},
	"references": {
		"url": [
			"https://lists.x.org/archives/xorg/2023-October/061506.html"
		],
		"cvename": [
			"CVE-2023-43785",
			"CVE-2023-43786",
			"CVE-2023-43787"
		]
	},
	"dates": {
		"discovery": "2023-09-22",
		"entry": "2023-10-12"
	}
}
