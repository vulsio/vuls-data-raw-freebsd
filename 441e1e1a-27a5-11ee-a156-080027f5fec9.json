{
	"vid": "441e1e1a-27a5-11ee-a156-080027f5fec9",
	"topic": "samba -- multiple vulnerabilities",
	"affects": [
		{
			"name": [
				"samba416"
			],
			"range": [
				{
					"lt": "4.16.11"
				}
			]
		},
		{
			"name": [
				"samba413"
			],
			"range": [
				{
					"lt": "4.13.17_6"
				}
			]
		}
	],
	"description": {
		"xmlns": "http://www.w3.org/1999/xhtml",
		"text": "\n\t<p>The Samba Team reports:</p>\n\t<blockquote cite=\"https://www.samba.org/samba/latest_news.html#4.18.5\">\n\t  <dl>\n\t    <dt>CVE-2023-34967: Samba Spotlight mdssvc RPC Request Type Confusion DoS Vulnerability</dt>\n\t    <dd>\n\t      When parsing Spotlight mdssvc RPC packets, one encoded\n\t      data structure is a key-value style dictionary where\n\t      keys are character strings and values can be any of\n\t      the supported types in the mdssvc protocol. Due to a\n\t      lack of type checking in callers of the function\n\t      dalloc_value_for_key(), which returns the object\n\t      associated with a key, a caller may trigger a crash in\n\t      talloc_get_size() when talloc detects that the passed in\n\t      pointer is not a valid talloc pointer. As RPC worker\n\t      processes are shared among multiple client connections,\n\t      a malicious client can crash the worker process\n\t      affecting all other clients that are also served by this\n\t      worker.\n\t    </dd>\n\t    <dt>CVE-2022-2127: Out-Of-Bounds read in winbind AUTH_CRAP</dt>\n\t    <dd>\n\t      When doing NTLM authentication, the client sends replies\n\t      to cryptographic challenges back to the server. These\n\t      replies have variable length. Winbind did not properly\n\t      bounds-check the lan manager response length, which\n\t      despite the lan manager version no longer being used is\n\t      still part of the protocol. If the system is running\n\t      Samba's ntlm_auth as authentication backend for services\n\t      like Squid (or a very unusual configuration with\n\t      FreeRADIUS), the vulnarebility is remotely exploitable.\n\t      If not so configured, or to exploit this vulnerability\n\t      locally, the user must have access to the privileged\n\t      winbindd UNIX domain socket (a subdirectory with name\n\t      'winbindd_privileged' under \"state directory\", as set in\n\t      the smb.conf). This access is normally only given so\n\t      special system services like Squid or FreeRADIUS, use\n\t      this feature.\n\t    </dd>\n\t    <dt>CVE-2023-34968: Spotlight server-side Share Path Disclosure</dt>\n\t    <dd>\n\t      As part of the Spotlight protocol, the initial request\n\t      returns a path associated with the sharename targeted by\n\t      the RPC request. Samba returns the real server-side\n\t      share path at this point, as well as returning the\n\t      absolute server-side path of results in search queries\n\t      by clients. Known server side paths could be used to\n\t      mount subsequent more serious security attacks or could\n\t      disclose confidential information that is part of the\n\t      path. To mitigate the issue, Samba will replace the\n\t      real server-side path with a fake path constructed from\n\t      the sharename.\n\t    </dd>\n\t    <dt>CVE-2023-34966: Samba Spotlight mdssvc RPC Request Infinite Loop DoS Vulnerability</dt>\n\t    <dd>\n\t      When parsing Spotlight mdssvc RPC packets sent by the\n\t      client, the core unmarshalling function sl_unpack_loop()\n\t      did not validate a field in the network packet that\n\t      contains the count of elements in an array-like\n\t      structure. By passing 0 as the count value, the attacked\n\t      function will run in an endless loop consuming 100% CPU.\n\t      This bug only affects servers where Spotlight is\n\t      explicitly enabled globally or on individual shares with\n\t      \"spotlight = yes\".\n\t    </dd>\n\t    <dt>CVE-2023-3347: SMB2 packet signing not enforced</dt>\n\t    <dd>\n\t      SMB2 packet signing is not enforced if an admin\n\t      configured \"server signing = required\" or for SMB2\n\t      connections to Domain Controllers where SMB2 packet\n\t      signing is mandatory. SMB2 packet signing is a\n\t      mechanism that ensures the integrity and authenticity of\n\t      data exchanged between a client and a server using the\n\t      SMB2 protocol. It provides protection against certain\n\t      types of attacks, such as man-in-the-middle attacks,\n\t      where an attacker intercepts network traffic and\n\t      modifies the SMB2 messages. Both client and server of\n\t      an SMB2 connection can require that signing is being\n\t      used. The server-side setting in Samba to configure\n\t      signing to be required is \"server signing = required\".\n\t      Note that on an Samba AD DCs this is also the default\n\t      for all SMB2 connections. Unless the client requires\n\t      signing which would result in signing being used on the\n\t      SMB2 connection, sensitive data might have been modified\n\t      by an attacker. Clients connecting to IPC$ on an AD DC\n\t      will require signed connections being used, so the\n\t      integrity of these connections was not affected.\n\t    </dd>\n\t  </dl>\n\t</blockquote>\n      "
	},
	"references": {
		"url": [
			"https://www.samba.org/samba/security/CVE-2023-34967.html",
			"https://www.samba.org/samba/security/CVE-2022-2127.html",
			"https://www.samba.org/samba/security/CVE-2023-34968.html",
			"https://www.samba.org/samba/security/CVE-2023-34966.html",
			"https://www.samba.org/samba/security/CVE-2023-3347.html"
		],
		"cvename": [
			"CVE-2023-34967",
			"CVE-2022-2127",
			"CVE-2023-34968",
			"CVE-2023-34966",
			"CVE-2023-3347"
		]
	},
	"dates": {
		"discovery": "2023-07-19",
		"entry": "2023-08-05"
	}
}
